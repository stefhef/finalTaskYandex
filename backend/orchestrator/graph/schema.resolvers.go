package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"

	"githgub.com/stefhef/finalTaskYandex/orchestrator/database"
	"githgub.com/stefhef/finalTaskYandex/orchestrator/graph/model"
)

// AddExpression is the resolver for the AddExpression field.
func (r *mutationResolver) AddExpression(ctx context.Context, text *string) (*model.Expression, error) {
	exp, err := database.AddExpression(*text)
	return exp, err
}

// Expressions is the resolver for the Expressions field.
func (r *queryResolver) Expressions(ctx context.Context, limit *int, offset *int) ([]*model.Expression, error) {
	Expressions, err := database.GetAllExpressions()
	if err != nil {
		return nil, err
	}
	return Expressions, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
